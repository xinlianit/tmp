<?php
/**
 * CommonController.class.php - 后台公共控制器
 * @desc 除Public公共访问控制器，其他控制必须继承，用户管理身份及权限认证
 * @package Controller
 * @subpackage null
 * @link http://www.pad-phone.com
 * @author 派锋科技 PHP DEV TEAM JiRY(390066398@qq.com)
 * @copyright 2016-10-28 9:50
 */
namespace Admin\Controller;
use Think\Controller;
class CommonController extends Controller {
    
    /**
     * 公共逻辑层
     * @var object
     */
    public static $CommonLogic;
    
    /**
     * 管理员登陆信息
     * @var array
     */
    protected static $loginInfo = array();
    
    /**
     * POST 数据
     * @var array
     */
    protected $post = null;
    
    /**
     * GET 数据
     * @var array
     */
    protected $get = null;
    
    /**
     * 返回数据
     * @var array
     */
    public $result = array('status'=>0);
    
    public function _initialize(){
        
        $this->post = I('post.') ? I('post.') : $_POST;
        
        $this->get  = I('get.') ? I('get.') : $_GET;
        
        self::$CommonLogic = D('Common' , 'Logic');
        
        self::$loginInfo = self::$CommonLogic->getLoginInfo();
        
        $auth_key = C('AUTH_CONFIG.AUTH_KEY');
        $login_token = session( $auth_key );
        
        //是否登陆
        if( !$login_token ) {
            if( IS_AJAX ){
                $this->result['msg'] = '管理员登陆信息已过期，请重新登陆！';
                $this->ajaxReturn( $this->result );
            }else{
                $this->redirect("Public/login");
            }
        }
            
        self::header();
        
        self::left();
        
        self::routePath();
        
        $Auth = new \Think\Auth();
        $module_name = MODULE_NAME .'/'. CONTROLLER_NAME . '/' . ACTION_NAME;
        //非超级管理员，权限检测
        if(self::$loginInfo['admin_account'] != C('AUTH_CONFIG.AUTH_ADMINISTRATOR') && $module_name != 'Admin/Index/index'){
            if(!$Auth->check( $module_name , $login_token, 3)){
                if( IS_AJAX ){
                    $this->result['msg'] = '抱歉，该功能您暂无操作权限！';
                    $this->ajaxReturn( $this->result );
                }else{
                    $this->display('Layout/no_access');
                }
                
                exit;
            }
        }
    }
    
    /**
     * 后台头部
     */
    private function header(){
        $this->assign('loginInfo',self::$loginInfo);
    }
    
    /**
     * 左侧菜单
     */
    private function left(){
        
        $rule_list = D('Sys', 'Cache')->getMenu();
        
        if( !$rule_list || empty($rule_list) ){
            $condition  = array(
                'pid'       => 0,
                'status'    => 1,
                'is_show'   => 1,
            );
            
            $rule_list = self::$CommonLogic->getRows( 'AuthRule', $condition, array('id', 'pid', 'name', 'icon_name', 'title') , array('sort'=>'asc') );
            foreach($rule_list as $b_k=>$b_v ){
                //URL地址
                @list($module , $controller , $action) = explode('/', $b_v['name']);
                
                if(isset($controller) && isset($action)){
                    $rule_list[$b_k]['url'] = U($controller.'/'.$action);
                }
                
                $condition['pid'] = $b_v['id'];
                $rule_list[$b_k]['list'] = self::$CommonLogic->getRows( 'AuthRule', $condition, array('id', 'pid', 'name', 'icon_name', 'title'), array('sort'=>'asc') );
            
                foreach($rule_list[$b_k]['list'] as $s_k=>$s_v ){
                    
                    //URL地址
                    @list($module , $controller , $action) = explode('/', $s_v['name']);
                    
                    if(isset($controller) && isset($action)){
                        $rule_list[$b_k]['list'][$s_k]['url'] = U($controller.'/'.$action);
                    }
                    
                    $condition['pid'] = $s_v['id'];
                    $rule_list[$b_k]['list'][$s_k]['list'] = self::$CommonLogic->getRows( 'AuthRule', $condition, array('id', 'pid', 'name', 'icon_name', 'title'), array('sort'=>'asc') );
                
                    foreach($rule_list[$b_k]['list'][$s_k]['list'] as $m_k => $m_v){
                        //URL地址
                        @list($module , $controller , $action) = explode('/', $m_v['name']);
                        
                        if(isset($controller) && isset($action)){
                            $rule_list[$b_k]['list'][$s_k]['list'][$m_k]['url'] = U($controller.'/'.$action);
                        }
                    }
                }
            }
            
           $rule_list = D('Sys', 'Cache')->getMenu( $rule_list );
        }
        
        $this->assign('menu', $rule_list);
    }
    
    /**
     * 路由信息
     */
    private function routePath(){
        //路径信息
        $path = array();
        $path_id = array();
        
        $url_info = MODULE_NAME .'/'. CONTROLLER_NAME . '/' . ACTION_NAME;
        
        $lats_level = self::$CommonLogic->getRow('AuthRule' , array('name'=>$url_info));
        
        if( !empty($lats_level) ){
            $item = array( 'name'=> $lats_level['title'] );
            
            array_unshift($path , $item);
            array_push($path_id, $lats_level['id']);
            
            if( $lats_level['pid'] != 0 ){
                //上级路径
                $two_level = self::$CommonLogic->getRow('AuthRule' , array('id'=>$lats_level['pid']));
                
                if( !empty($two_level) ){
                    $item = array( 'name'=> $two_level['title'] );
                    
                    array_unshift($path , $item);
                    array_push($path_id, $two_level['id']);
                    
                    if( $two_level['pid'] != 0 ){
                        //上级路径
                        $one_level = self::$CommonLogic->getRow('AuthRule' , array('id'=>$two_level['pid']));
                    
                        if( !empty($one_level) ){
                            $item = array( 'name'=> $one_level['title'] );
                    
                            array_unshift($path , $item);
                            array_push($path_id, $one_level['id']);
                        }
                    }
                }
            }
        }
        
        //当前路径信息
        $this->assign('path' , $path);
        $this->assign('path_id' , $path_id);
    }
    
    /**
     * AJAX 错误返回
     * @param array $data 返回数据
     * @copyright (c) 2016-11-08, zhaoxizhan
     */
    protected function ajaxReturnErr($data=array()){
        if(is_string($data)){
            $_data['status'] = 0;
            $_data['msg'] = $data;
        }else{
            $_data = $data;
        }
        //状态标识
        if(!array_key_exists('status', $data)){
            $_data['status'] = 0;
        }
        
        //返回说明
        if(!array_key_exists('msg', $_data)){
            $_data['msg'] = '请求处理失败';
        }
        
        //返回
        $this->ajaxReturn($_data);
    }
    
    /**
     * AJAX 成功返回
     * @param array $data 返回数据
     * @copyright (c) 2016-11-08, zhaoxizhan
     */
    protected function ajaxReturnSuccess($data = array()){
        if(!array_key_exists('data', $data)){
            $_data['data'] = $data;
        }else{
            $_data = $data;
        }
        //状态标识
        if(!array_key_exists('status', $_data)){
            $_data['status'] = 1;
        }
        //返回说明
        if(!array_key_exists('msg', $_data)){
            $_data['msg'] = '请求处理成功';
        }
        
        
        //返回
        $this->ajaxReturn($_data);
    }
    
    /**
     * 模板显示
     * @param string $tpl           模板名称
     */
    public function display($tpl = null){
        
        //强制小写
        if( $tpl === null ) {
            $tpl = strtolower(ACTION_NAME);
        }
        
        parent::display($tpl);
    }
    
    public function _empty(){
        $this->display('Layout/empty');
    }
    
}